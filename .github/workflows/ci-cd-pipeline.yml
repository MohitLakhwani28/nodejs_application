name: Simplified CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image to DockerHub
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-web-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-web-app:latest

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Set up Node.js and install dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      # Run tests
      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Terraform Init and Apply
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform
