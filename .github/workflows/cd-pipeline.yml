name: CD Pipeline

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action to perform'
        required: true
        default: 'deploy'
        options:
          - deploy
          - destroy

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action != 'destroy' }}

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-south-1'  # Replace with your AWS region

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      # Apply Terraform configuration
      - name: Terraform Apply
        run: terraform apply -auto-approve 
        working-directory: ./terraform

  destroy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' }}

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-south-1'  # Replace with your AWS region

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      # Destroy Terraform-managed infrastructure
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./terraform
